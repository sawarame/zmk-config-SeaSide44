#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT 0
#define MOUSE 1
#define SCROLL_AND_FUNCTION 2
#define NUM_AND_SYMBOL 3
#define SHORTCUT_MAC 4
#define SHORTCUT_WIN 5
#define CONFIG 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <100>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <100>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        escape: escape {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp ESC>;
            label = "ESCAPE";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&kp TAB                   &kp Q  &kp W   &kp E   &kp R        &kp T                                                     &kp Y        &kp U  &kp I           &kp O            &kp P          &kp EQUAL
&mt LCTRL LEFT_BRACKET    &kp A  &kp S   &kp D   &kp F        &kp G                                                     &kp H        &kp J  &kp K           &lt 1 L          &kp SEMICOLON  &mt RCTRL MINUS
&mt RSHIFT RIGHT_BRACKET  &kp Z  &kp X   &kp C   &kp V        &kp B                                                     &kp N        &kp M  &mt RGUI COMMA  &mt RALT PERIOD  &kp SLASH      &mt RSHIFT BACKSLASH
                                 &trans  &trans  &lt 2 LANG5  &lt 3 SPACE  &mt LSHIFT ESC    &mt RIGHT_SHIFT BACKSPACE  &lt 4 ENTER         &mo 6
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans  &trans  &kp N0
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mkp MB1  &mkp MB2  &trans  &trans  &kp N1
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mkp MB3  &trans    &trans  &trans  &kp N2
                &trans  &trans  &trans  &trans  &trans    &trans  &trans            &trans
            >;
        };

        SCROLL_AND_FUNCTION {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5                    &kp F6          &kp F7          &kp F8        &kp F9        &kp F10  &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans                    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp UP_ARROW  &trans   &trans
&trans  &trans   &trans   &trans  &trans  &trans                    &trans          &trans          &trans        &trans        &trans   &trans
                 &trans   &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };

        NUM_AND_SYMBOL {
            bindings = <
&trans  &kp N1           &kp N2       &kp N3    &kp N4      &kp N5                         &kp N6         &kp N7         &kp N8        &kp N9    &kp N0    &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                    &kp CARET      &kp AMPERSAND  &kp ASTERISK  &kp LPAR  &kp RPAR  &trans
&trans  &trans           &kp DQT      &kp SQT   &trans      &trans                         &trans         &trans         &trans        &trans    &trans    &trans
                         &trans       &trans    &trans      &trans       &trans    &trans  &kp LC(SPACE)                 &trans
            >;
        };

        SHORTCUT_MAC {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };

        SHORTCUT_WIN {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };

        CONFIG {
            bindings = <
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans        &trans        &trans        &trans        &trans    &trans  &trans          &trans
            >;
        };
    };
};
